По заданию 3 Сделано:

1) Страничка с адресом /news/, на которой должен выводиться список всех новостей.
2) Все статьи выведены в виде списка заголовка, даты и первых 20 слов текста статьи.
3) Новости выведены в порядке от более свежей до самой старой. Отображается всё по адресу /news/.
4) Сделал отдельную страницу для полной информации о статье /news/<id новости>. На этой странице вся информация о статье - Название, текст и дата загрузки в формате день месяц год час:минуты.
5) Написал собственный фильтр Censor, который цензурирует нежелательную лексику в названиях и текстах статей.

По заданию 4 сделано:
1) Добавлен постраничный ввод в основной странице - news/templates/news.html
2) Добавлена страничка поиска в news/templates/search.html
3) Реализована возможность создания постов в самом приложении:
Создана страничка news/templates/post_create.html
Создана news/forms.py
4) А также реализована возможность редактирование и удаление постов.

По заданию 5 сделано:
1) Добавлена проверка аутентификации.
2) Выполнена настройка пакета allauth в файле конфигурации. (NewsPaper/settings.py)
3) В файле конфигурации определить адрес для перенаправления на страницу входа в систему и адрес перенаправления после успешного входа. (NewsPaper/settings.py)

4) Реализован шаблон с формой входа в систему и выполнена настройка конфигурации URL.(NewsPaper/accounts/templates/account/login.html)

5) Реализован шаблон страницы регистрации пользователей. (NewsPaper/accounts/templates/account/signup.html)
6) Реализована возможность регистрации через Google-аккаунт. (NewsPaper/accounts/templates/socialaccount/login.html)

7) Созданы группы common и authors.
8) Реализовано автоматическое добавление новых пользователей в группу common. (NewsPaper/accounts/forms.py)

9) Реализована возможность стать автором (быть добавленным в группу authors). (NewsPaper/accounts/views.py)
(NewsPaper/accounts/urls.py, NewsPaper/template/default.html)

10) Для группы authors предоставлены права создания и редактирования объектов модели Post (новостей и статей).
В классах-представлениях добавления и редактирования новостей и статей добавлена проверка прав доступа.
(NewsPaper/news/views.py)

По заданию 6 сделано:
1) Добавлено пользователю возможность подписываться на рассылку новостей в какой-либо категории.
Это можно через странички (ссылка/кнопка), в который пользователь может подписаться:
NewsPaper/news/templates/news.html
 или 
NewsPaper/accounts/templates/user_account.html
Сама подписка реализована в NewsPaper/accounts/views.py и NewsPaper/accounts/urls.py
2) При добавлении новости из этой категории пользователю на email, указанный при регистрации
Это реализовано с помощью сигналов NewsPaper/news/signals.py и выполнение функций NewsPaper/news/tasks/base.py

3) Добавилено приветсвенное письмо при регистрации.
Это реализовано с помощью сигналов NewsPaper/news/signals.py и выполнение функций NewsPaper/news/tasks/base.py

4) Добавлено ограничение количества постов в сутки.
Это реализовано в NewsPaper/news/views.py и NewsPaper/news/templates/post_create.html

5) Сделана еженедельная рассылка подписавшимся пользователям.
Функция: NewsPaper/news/tasks/base.py,
Планировщик: NewsPaper/news/management/commands/runapscheduler.py

По заданию 12 сделано:
1) В консоль выводятся все сообщения уровня DEBUG и выше, включающие время, уровень сообщения, сообщения. Для сообщений WARNING и выше дополнительно выводится путь к источнику события (используется аргумент pathname в форматировании). А для сообщений ERROR и CRITICAL еще выводится стэк ошибки (аргумент exc_info). Сюда попадают все сообщения с основного логгера django.
2) В файл general.log выводятся сообщения уровня INFO и выше только с указанием времени, уровня логирования, модуля, в котором возникло сообщение (аргумент module) и само сообщение. Сюда также попадают сообщения с регистратора django
3) В файл errors.log выводятся сообщения только уровня ERROR и CRITICAL. В сообщении указывается время, уровень логирования, само сообщение, путь к источнику сообщения и стэк ошибки. В этот файл попадают сообщения только из логгеров django.request, django.server, django.template, django.db_backends.
4) В файл security.log попадают только сообщения, связанные с безопасностью из логгера django.security. Формат вывода предполагает время, уровень логирования, модуль и сообщение.
5) На почту отправлятся сообщения уровней ERROR и выше из django.request и django.server, по формату как в errors.log, но без стэка ошибок.

В консоль сообщения отправляются только при DEBUG = True, а на почту и в файлы только при DEBUG = False.



